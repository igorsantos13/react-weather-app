{"version":3,"sources":["App.js","index.js"],"names":["App","useState","city","setCity","weatherForecast","setWeatherForecast","isLoading","setLoading","className","href","id","type","value","onChange","e","target","onClick","fetch","then","res","status","json","alert","data","console","log","src","current","condition","icon","alt","text","temp_c","location","country","region","name","humidity","wind_kph","vis_km","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLA8FeA,MA7Ff,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8CF,mBAAS,MAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KAEA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAkBC,EAAlB,KAuBA,OACE,qCACE,8BACE,qBAAKC,UAAU,mDAAf,SACE,mBAAGA,UAAU,eAAeC,KAAK,UAAjC,8BAMJ,sBAAMD,UAAU,YAAYE,GAAG,SAA/B,SACE,sBAAKF,UAAU,YAAf,UACE,qFACA,mBAAGA,UAAU,OAAb,uGAIA,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,WAAf,SACE,uBACEE,GAAG,QACHC,KAAK,OACLH,UAAU,eACVI,MAAOV,EACPW,SAAU,SAACC,GAAD,OAAOX,EAAQW,EAAEC,OAAOH,cAIxC,wBAAQJ,UAAU,yBAAyBQ,QAjD9B,WACnBC,MAAM,mFAAD,OACgFf,EADhF,aAGFgB,MAAK,SAACC,GAEL,GAAmB,MAAfA,EAAIC,OAEN,OADAb,GAAW,GACJY,EAAIE,OACY,MAAfF,EAAIC,QACZE,MAAM,mEAGTJ,MAAK,SAACK,GACLhB,GAAW,GACXiB,QAAQC,IAAIF,GACZlB,EAAmBkB,GACnBpB,EAAQ,QAgCN,SACGG,EAAY,gBAAkB,cAGhCF,EACC,mCACE,sBAAKI,UAAU,iCAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBACEkB,IAAG,UAAKtB,EAAgBuB,QAAQC,UAAUC,MAC1CC,IAAI,mBAGR,gCACE,sDACoB1B,EAAgBuB,QAAQC,UAAUG,QAEtD,oBAAGvB,UAAU,OAAb,mBACSJ,EAAgBuB,QAAQK,OADjC,UACgD,uBADhD,YAES5B,EAAgB6B,SAASC,QAFlC,cAGW9B,EAAgB6B,SAASE,OAHpC,cAIW/B,EAAgB6B,SAASG,KAClC,uBACA,2DANF,aAOahC,EAAgBuB,QAAQU,SAPrC,IAO+C,uBAP/C,wBAQwBjC,EAAgBuB,QAAQW,SARhD,SAQ+D,uBAR/D,iBASiBlC,EAAgBuB,QAAQY,OATzC,OASoD,kCAKxD,cCnFdC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5b6b1b9c.chunk.js","sourcesContent":["import { useState } from \"react\";\nfunction App() {\n  const [city, setCity] = useState(\"\");\n  const [weatherForecast, setWeatherForecast] = useState(null);\n\n  const [isLoading, setLoading] = useState(false)\n\n  const handleSearch = () => {\n    fetch(\n      `http://api.weatherapi.com/v1/current.json?key=cbe32a39721442abbe3185822212210&q=${city}&lang=pt`\n    )\n      .then((res) => {\n        \n        if (res.status === 200) {\n          setLoading(true)\n          return res.json();\n        }else if (res.status !== 200){\n          alert('Algo deu errado, verifique os campos ou reinicie a página')\n        }\n      })\n      .then((data) => {\n        setLoading(false)\n        console.log(data);\n        setWeatherForecast(data);\n        setCity('')\n      });\n  };\n\n  return (\n    <>\n      <div>\n        <nav className=\"navbar navbar-expand-md navbar-dark bg-dark mb-4\">\n          <a className=\"navbar-brand\" href=\"#search\">\n            EBAC Weather\n          </a>\n        </nav>\n      </div>\n\n      <main className=\"container\" id=\"search\">\n        <div className=\"jumbotron\">\n          <h1>Verique agora a previsão do tempo na sua cidade!</h1>\n          <p className=\"lead\">\n            Digite da sua cidade no campo abaixo o nome da sua cidade em seguida\n            clique em pesquisar.\n          </p>\n          <div className=\"row mb-4\">\n            <div className=\"col-md-6\">\n              <input\n                id='input'\n                type=\"text\"\n                className=\"form-control\"\n                value={city}\n                onChange={(e) => setCity(e.target.value)}\n              />\n            </div>\n          </div>\n          <button className=\"btn btn-lg btn-primary\" onClick={handleSearch}>\n            {isLoading ? 'Carregando...' : 'Pesquisar'}\n          </button>\n\n          {weatherForecast ? (\n            <>\n              <div className=\"mt-4 d-flex align-items-center\">\n                <div className=\"col-sm-1\">\n                  <img\n                    src={`${weatherForecast.current.condition.icon}`}\n                    alt=\"Weather Icon\"\n                  />\n                </div>\n                <div>\n                  <h3>\n                    Hoje o dia está: {weatherForecast.current.condition.text}\n                  </h3>\n                  <p className=\"lead\">\n                    Temp: {weatherForecast.current.temp_c}&#8451; <br />\n                    País: {weatherForecast.location.country} - \n                    Estado: {weatherForecast.location.region} - \n                    Cidade: {weatherForecast.location.name} \n                    <hr />\n                    <h3>Outras informações:</h3>\n                    Humidade: {weatherForecast.current.humidity} <br />\n                    Velocidade do vento: {weatherForecast.current.wind_kph} Km/h <br />\n                    Visibilidade: {weatherForecast.current.vis_km} Km <br />\n                  </p>\n                </div>\n              </div>\n            </>\n          ) : null}\n        </div>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}